/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 *
 ***************************************************************************************************
 * German Quertz variation for Sofle Keyboards
 ***************************************************************************************************
 * Host layout: DE
 *
 *
 ***************************************************************************************************
 * Base layer:
 ***************************************************************************************************
 * ,-----------------------------------------.                    ,-----------------------------------------.
 * | `    |  1 ! |  2 @ |  3 # |  4 $ |  5 % |                    |  6 ^ |  7 & |  8 * |  9 ( |  0 ) | DEL  |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | ESC  |   Q  |   W  |   E  |   R  |   T  |                    |   Z  |   U  |   I  |   O  |   P  | Bspc |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | TAB  |   A  |   S  |   D  |   F  |   G  |-------.    ,-------|   H  |   J  |   K  |   L  |  ; : | ' "  |
 * |------+------+------+------+------+------| MUTE  |    | RGBON |------+------+------+------+------+------|
 * |LShift|   Y  |   X  |   C  |   V  |   B  |-------|    |-------|   N  |   M  |  , < |  . > |  / ? |RShift|
 * `-----------------------------------------/       /     \      \-----------------------------------------'
 *            | LGUI | LAlt | LCTR | SYM  | /ENTER  /       \SPACE \  |CTLLYR| RCTR | RAlt | RGUI |
 *            |      |      |      |      |/       /         \      \ |      |      |      |      |
 *            `---------------------------'-------'           '------''---------------------------'
 *
 ***************************************************************************************************
 * Symbols layer:
 ***************************************************************************************************
 * ,-----------------------------------------.                    ,-----------------------------------------.
 * |      |  F1  |  F2  |  F3  |  F4  |  F5  |                    |  F6  |  F7  |  F8  |  F9  | F10  | F11  |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * |      |  !   |  @   |  #   |  $   |  %   |                    |  ^   |  &   |  *   |  (   |   )  | F12  |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * |      |      |      |      |      |      |-------.    ,-------|      |  +   |  \   |  [ { |  ] } | |    |
 * |------+------+------+------+------+------|       |    |       |------+------+------+------+------+------|
 * |      |  ä Ä |  ö Ö |  ü Ü |      |      |-------|    |-------|      |      |      |  -   |  _   |RShift|
 * `-----------------------------------------/       /     \      \-----------------------------------------'
 *            |      |      |      |      | /       /       \      \  |      |      |      |      |
 *            |      |      |      |      |/       /         \      \ |      |      |      |      |
 *            `---------------------------'-------'           '------''---------------------------'
 * 
 ***************************************************************************************************
 * Control Layer:
 ***************************************************************************************************
 * ,-----------------------------------------.                    ,-----------------------------------------.
 * |BTCLR | BT1  | BT2  | BT3  | BT4  | BT5  |                    |      |      |      |      |      |      |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * |      | INS  | PSCR | GUI  |      |      |                    | PGUP |<-ALT |   ^  | ALT->|      |      |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * |      | ALT  | CTRL | SHIFT|      | CAPS |-------.    ,-------| PGDN |   <- |   v  |  ->  | DEL  |      |
 * |------+------+------+------+------+------|       |    |       |------+------+------+------+------+------|
 * |      | UNDO | CUT  | COPY |PASTE |      |-------|    |-------|      |      |      |      |      |      |
 * `-----------------------------------------/       /     \      \-----------------------------------------'
 *            |      |      |      |      | /       /       \      \  |      |      |      |      |
 *            |      |      |      |      |/       /         \      \ |      |      |      |      |
 *            `---------------------------'-------'           '------''---------------------------'
 *
 * - `BT 0-4`: Select the x bluetooth profile
 * - `BT CLR`: Clear bond between the keyboard and the host for the selected profile
 ***************************************************************************************************
 * Notes:
 ***************************************************************************************************
 * - Double tap on SHIFT key toggles CAPS_LOCK
 */


#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include "keys_de.h"

/ {
    behaviors {
        de_semi: de-semicolon-colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_SEMI_COLO";
            #binding-cells = <0>;
            bindings = <&kp DE_SCLN>, <&kp DE_COLN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_equal: de-equal-plus {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_EQUAL_PLUS";
            #binding-cells = <0>;
            bindings = <&kp DE_EQL>, <&kp DE_PLUS>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_sqt: de-sqt-dqt {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_SQT_DQT";
            #binding-cells = <0>;
            bindings = <&kp DE_QUOT>, <&kp DE_DQUO>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_comma: de-comma-lt {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_COMMA_LT";
            #binding-cells = <0>;
            bindings = <&kp DE_COMM>, <&kp DE_LABK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_dot: de-dot-gt {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_DOT_GT";
            #binding-cells = <0>;
            bindings = <&kp DE_DOT>, <&kp DE_RABK>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_fslh: de-fslh-qmark {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_FSLK_QMARK";
            #binding-cells = <0>;
            bindings = <&kp DE_SLSH>, <&kp DE_QUES>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_2: de-2-at {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_2_AT";
            #binding-cells = <0>;
            bindings = <&kp DE_2>, <&kp DE_AT>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_3: de-3-hash {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_3_HASH";
            #binding-cells = <0>;
            bindings = <&kp DE_3>, <&kp DE_HASH>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_6: de-6-caret {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_6_CARET_WIN";
            #binding-cells = <0>;
            bindings = <&kp DE_6>, <&kp DE_CIRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_7: de-7-amps {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_7_AMPS";
            #binding-cells = <0>;
            bindings = <&kp DE_7>, <&kp DE_AMPR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_8: de-8-astrk {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_8_ASTRK";
            #binding-cells = <0>;
            bindings = <&kp DE_8>, <&kp DE_ASTR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_9: de-9-lpar {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_9_LPAR";
            #binding-cells = <0>;
            bindings = <&kp DE_9>, <&kp DE_LPRN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_0: de-0-rpar {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_0_RPAR";
            #binding-cells = <0>;
            bindings = <&kp DE_0>, <&kp DE_RPRN>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_euro: de-euro-rnga {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_EURO_RNGA";
            #binding-cells = <0>;
            bindings = <&kp DE_EURO>, <&kp DE_DEG>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_lbkt: de-lbkt-lbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_LBKT_LBRC";
            #binding-cells = <0>;
            bindings = <&kp DE_LBRC>, <&kp DE_LBRC>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_rbkt: de-rbkt-rbrc {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_RBKT_RBRC";
            #binding-cells = <0>;
            bindings = <&kp DE_RBRC>, <&kp DE_RCBR>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_grave: de-grave-tilde {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_GRAVE_TILDE";
            #binding-cells = <0>;
            bindings = <&kp DE_GRV>, <&kp DE_TILD>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        de_bslh: de-bslh-pipe {
            compatible = "zmk,behavior-mod-morph";
            label = "DE_BSLH_PIPE";
            #binding-cells = <0>;
            bindings = <&kp DE_BSLS>, <&kp DE_PIPE>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer_de {
            bindings = <
   &de_sqt  &kp DE_1    &kp KP_N2    &de_3     &kp DE_4  &kp DE_5                               &de_6     &de_7     &de_8    &de_9    &de_0    &kp DEL
   &kp ESC   &kp DE_Q     &kp DE_W     &kp DE_E      &kp DE_R   &kp DE_T                                &kp DE_Z      &kp DE_U      &kp DE_I     &kp DE_O     &kp DE_P   &kp BSPC
   &kp TAB   &kp DE_A     &kp DE_S     &kp DE_D      &kp DE_F   &kp DE_G                                &kp DE_H      &kp DE_J      &kp DE_K     &kp DE_L  &de_semi    &de_equal
   &kp LSHFT   &kp DE_Y     &kp DE_X     &kp DE_C      &kp DE_V   &kp DE_B  &kp C_MUTE  &rgb_ug RGB_TOG   &kp DE_N      &kp DE_M  &de_comma   &de_dot  &de_fslh  &kp RSHFT
                   &kp LGUI  &kp LALT  &kp LCTRL   &mo 2   &kp SPACE        &kp RET   &mo 1  &kp RCTRL   &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        sym_layer {
            bindings = <
   &trans     &kp F1     &kp F2       &kp F3    &kp F4     &kp F5                     &kp F6    &kp F7           &kp F8     &kp F9   &kp F10   &kp F11
&kp DE_CIRC     &kp EXCL     &kp AT       &kp HASH    &kp DLLR     &kp PRCNT                     &kp CARET    &kp AMPS           &kp KP_MULTIPLY     &kp LPAR    &kp RPAR   &kp F12
   &trans   &trans     &trans     &trans  &trans  &trans                  &trans  &kp KP_PLUS  &de_bslh   &de_lbkt  &de_rbkt  &trans
   &trans  &kp DE_ADIA  &kp DE_ODIA  &kp DE_UDIA   &trans  &trans  &trans   &trans  &trans    &de_grave  &kp MINUS  &trans    &trans
                         &trans       &trans    &trans     &trans  &trans  &trans     &trans    &trans           &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        ctl_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &trans        &trans    &trans         &trans   &trans    &trans
    &trans       &kp INS     &kp PSCRN   &kp K_CMENU        &trans        &trans                  &kp PG_UP  &kp RA(LEFT)    &kp UP  &kp RA(RIGHT)   &trans    &trans
    &trans      &kp LALT     &kp LCTRL     &kp LSHFT        &trans      &kp CLCK                  &kp PG_DN      &kp LEFT  &kp DOWN      &kp RIGHT  &kp DEL  &trans
    &trans    &kp K_UNDO     &kp K_CUT    &kp K_COPY   &kp K_PASTE        &trans  &trans  &trans     &trans        &trans    &trans         &trans   &trans    &trans
                                &trans        &trans        &trans        &trans  &trans  &trans     &trans        &trans    &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
